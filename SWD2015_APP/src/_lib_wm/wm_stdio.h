/**********************************************************************************************************************/
/*  wm_stdio.h    -  Copyright Sierra Wireless Inc. (c) 2010														  */
/*                                                                                                                    */
/*                                                                                                                    */
/* LICENSE                                                                                                            */
/* =======                                                                                                            */
/* If no specific agreement has been signed, this Source Code is subject to the following license terms:              */
/* http://www.sierrawireless.com/productsandservices/AirPrime/Sierra_Wireless_Software_Suite/License/Userlicense.aspx */
/* If you modify this file, you are subject to the contribution rules described into this license                     */
/**********************************************************************************************************************/


/****************************************************************************/
/*  File    : wm_stdio.h                                                    */
/*--------------------------------------------------------------------------*/
/*  Scope   : STANDARD IO DEFINITIONS,                                      */
/*            contains the string and memory functions and definitions      */
/*                                                                          */
/*  Contents:                                                               */
/*                                                                          */
/*  Historical :                                                            */
/*--------------------------------------------------------------------------*/
/*   Date   | Author     | Err  |  Modification                             */
/*----------+------------+------+-------------------------------------------*/
/* 09.05.00 | J.Montes   |      |  Creation                                 */
/* 08.11.00 |  FCA       |      | Add  wm_strcmpi and wm_strnicmp           */
/*          |            |      | wm_isascii wm_isdigit                     */
/*----------+------------+------+-------------------------------------------*/
/*
 * --------------------------------------------------------------------------
 *  Date     | Author | Revision       | Description
 * ----------+--------+----------------+-------------------------------------
 *  28.11.03 | dpo    | 1.7            | * Add definitions for RTE          
 * ----------+--------+----------------+-------------------------------------
 *  24.09.03 | dpo    | 1.6            | * Use compiler provided standard st
 *           |        |                | ring functions                     
 * ----------+--------+----------------+-------------------------------------
 * --------------------------------------------------------------------------
 *  Date     | Author | Revision       | Description
 * ----------+--------+----------------+-------------------------------------
 *  05.08.02 | dpo    | 1.5            | * Standard API update              
 * ----------+--------+----------------+-------------------------------------
 * 
 *    Rev 1.4   Aug 30 2001 11:19:36   lho
 * keep only tools for strings and memory
 * 
 *    Rev 1.3   Dec 20 2000 11:49:52   lho
 * suppress wm_types.h include
 * 
 *    Rev 1.2   Dec 19 2000 16:07:24   jmo
 * Add $log tag for comments
*/
/****************************************************************************/

#ifndef __WM_STDIO_H__
#define __WM_STDIO_H__                                                        


// Include files for ARM and VISUAL
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <ctype.h>

/****************************************************************************/
/*                   STANDARD LIBRARY management                            */
/****************************************************************************/

#ifndef __WAVECOM_DEC__

#define  wm_strcpy        strcpy
#define  wm_strncpy       strncpy
#define  wm_strlen        strlen
#define  wm_strcat        strcat
#define  wm_strncat       strncat
#define  wm_memset        memset
#define  wm_memcpy        memcpy
#define  wm_memcmp        memcmp
#define  wm_strcmp        strcmp
#define  wm_strncmp       strncmp
#define  wm_atoi          atoi
#define  wm_isdigit       isdigit
#define  wm_strtok        strtok
#define  wm_strspn        strspn
#define  wm_strcspn       strcspn
#define  wm_memmove       memmove
#define  wm_sprintf       sprintf
#define  wm_vsprintf      vsprintf


//s32     wm_stricmp                  ( ascii * s1, ascii * s2 );
//s32     wm_strnicmp                 ( ascii * s1, ascii * s2, u32 n );
ascii * wm_itoa             ( s32 a, ascii *szBuffer );

#define  wm_stricmp	      strcasecmp//stricmp
#define  wm_strnicmp      strncasecmp//strnicmp

#endif  // __WAVECOM_DEC__



/***************************************************************************/
/*  Function   : wm_isascii                                                */
/*-------------------------------------------------------------------------*/
/*  Objet      : Check if the character is an ascii one                    */
/*                                                                         */
/*  Return     : Character if ascii, 0 otherwise                           */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  c                 | x |   |   | Char to check                          */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
ascii wm_isascii ( ascii c );


/***************************************************************************/
/*  Function   : wm_ishexa                                                 */
/*-------------------------------------------------------------------------*/
/*  Objet      : Check if the character is an hexadecimal one              */
/*                                                                         */
/*  Return     : Character if hexadecimal, 0 otherwise                     */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  c                 | x |   |   |  Char to check                         */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
ascii wm_ishexa ( ascii c );



/***************************************************************************/
/*  Function   : wm_isnumstring                                            */
/*-------------------------------------------------------------------------*/
/*  Objet      : Check numeric string                                      */
/*                                                                         */
/*  Return     : TRUE if numeric, FALSE otherwise                          */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  string            | x | x |   |  String to check                       */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
//bool wm_isnumstring ( ascii * string );



/***************************************************************************/
/*  Function   : wm_ishexastring                                           */
/*-------------------------------------------------------------------------*/
/*  Object     : Check if the string is an hexadecimal one                 */
/*                                                                         */
/*  Return     : TRUE if hexadecimal, FALSE otherwise                      */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  string            | x |   |   |  String to check                       */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
bool wm_ishexastring ( ascii * string );



/***************************************************************************/
/*  Function   : wm_isphonestring                                          */
/*-------------------------------------------------------------------------*/
/*  Object     : Check if the string is valid phone number                 */
/*                                                                         */
/*  Return     : TRUE if phone number, FALSE otherwise                     */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  string            | x |   |   |  String to check                       */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
//bool wm_isphonestring ( ascii * string );



/***************************************************************************/
/*  Function   : wm_hexatoi                                                */
/*-------------------------------------------------------------------------*/
/*  Object     : Convert hexadecimal string to u32                         */
/*                                                                         */
/*  Return     : Converted u32, 0 on error                                 */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  src               | x |   |   | String to convert                      */
/*--------------------+---+---+---+----------------------------------------*/
/*  iLen              | x |   |   | String length                          */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
u32 wm_hexatoi ( ascii * src, u16 iLen );



/***************************************************************************/
/*  Function   : wm_hexatoibuf                                             */
/*-------------------------------------------------------------------------*/
/*  Objet      : Convert hexadecimal string to u8 * buffer                 */
/*                                                                         */
/*  Return     : pointer on dst                                            */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  dst               |   | x |   | Buffer                                 */
/*--------------------+---+---+---+----------------------------------------*/
/*  src               | x |   |   | String to convert                      */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
//u8 * wm_hexatoibuf ( u8 * dst, ascii * src );



/***************************************************************************/
/*  Function   : wm_itohexa                                                */
/*-------------------------------------------------------------------------*/
/*  Objet      : Convert u32 to hexadecimal string                         */
/*                                                                         */
/*  Return     : pointer on dst string                                     */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  dst               |   | X |   |  destination string                    */
/*--------------------+---+---+---+----------------------------------------*/
/*  nb                | x |   |   |  u32 to convert                        */
/*--------------------+---+---+---+----------------------------------------*/
/*  len               | x |   |   |  length of conversion                  */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
ascii * wm_itohexa ( ascii *dst, u32 nb, u8 len );



/***************************************************************************/
/*  Function   : wm_ibuftohexa                                             */
/*-------------------------------------------------------------------------*/
/*  Objet      : Convert a u8* buffer to hexadecimal string                */
/*                                                                         */
/*  Return     : pointer on dst string                                     */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  dst               |   | X |   |  destination string                    */
/*--------------------+---+---+---+----------------------------------------*/
/*  src               | x |   |   |  buffer to convert                     */
/*--------------------+---+---+---+----------------------------------------*/
/*  len               | x |   |   |  len of src buffer                     */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
//ascii * wm_ibuftohexa ( ascii * dst, u8 * src, u16 len );



/***************************************************************************/
/*  Function   : wm_strSwitch                                              */
/*-------------------------------------------------------------------------*/
/*  Object     : Switch for strings                                        */
/*                                                                         */
/*  Remark     : The list must finish by NULL.                             */
/*                                                                         */
/*  Return     : u16  0 strTest not find in list                           */
/*                    n strTest was founded row n                          */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  strTest           | x |   |   |  String to compare                     */
/*--------------------+---+---+---+----------------------------------------*/
/*  ...               | x |   |   |  List of string to compare             */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
//u16 wm_strSwitch ( const ascii * strTest, ... );



/***************************************************************************/
/*  Function   : wm_strRemoveCRLF                                          */
/*-------------------------------------------------------------------------*/
/*  Object     : Remove CR(0x0D) LF(0x0A)                                  */
/*                                                                         */
/*  Return     : String without CR/LF                                      */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  dst               |   | x |   |  string format without CR LF           */
/*--------------------+---+---+---+----------------------------------------*/
/*  src               | x |   |   |  string format with    CR LF           */
/*--------------------+---+---+---+----------------------------------------*/
/*  size              | x |   |   |  string size                           */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
ascii * wm_strRemoveCRLF ( ascii * dst, ascii * src, u16 size );



/***************************************************************************/
/*  Function   : wm_strGetParameterString                                  */
/*-------------------------------------------------------------------------*/
/*  Object     : Returns the parameter string at Position                  */
/*                                                                         */
/*  Return     : ascii * NULL if not found                                 */
/*                       Address of the begin of string parameter          */
/*                                                                         */
/*-------------------------------------------------------------------------*/
/*  Variable Name     |IN |OUT|GLB|  Utilisation                           */
/*--------------------+---+---+---+----------------------------------------*/
/*  dst               |   | x |   |  String to return                      */
/*--------------------+---+---+---+----------------------------------------*/
/*  src               | x |   |   |  String to analyse                     */
/*--------------------+---+---+---+----------------------------------------*/
/*  Position          | x |   |   |  Parameter position                    */
/*--------------------+---+---+---+----------------------------------------*/
/***************************************************************************/
ascii * wm_strGetParameterString ( ascii * dst, const u16 dst_len, const ascii * src, u8 Position );







/////////////////////////////////////////////////////////////////////////
s16 strSearchToken(ascii *buff,ascii token,u16 number,u16 size);

#endif  /* __WM_STDIO_H__ */
